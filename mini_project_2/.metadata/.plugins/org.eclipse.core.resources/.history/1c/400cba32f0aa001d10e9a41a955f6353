#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
unsigned char sec1=0;
unsigned char sec2=0;
unsigned char min1=0;
unsigned char min2=0;
unsigned char hour1=0;
unsigned char hour2=0;
ISR(TIMER1_COMPA_vect)
{
	sec1++;
	if(sec1==10)
	{
		sec1=0;
		sec2++;
	}

}
void timer1_ctc()
{
	/* set bits for non pwm mode*/
	TCCR1A=(1<<FOC1A)|(1<< FOC1B);
	/*(1<<WGM12) foe compare mode
	 * (1<<CS10)|(1<<CS12) for pre scaler 1024
	 * */
	TCCR1B=(1<<WGM12)|(1<<CS10)|(1<<CS12);
	/*start count from 0*/
	TCNT1=0;
	/*count to choosen value*/
	OCR1A=1000;
	/*enable module interrubt for compare mode*/
	TIMSK|=(1<< OCIE1A);
}
void main() {
	timer1_ctc();
	SREG|=(1<<7);
	DDRC|=0x0f;
	DDRA|=0x3f;
	while(1)
	{
		PORTA=(PORTA&0xc0)|(1<<0);
		PORTC=(PORTC&0xf0)|sec1;
		_delay_ms(2);
		PORTA=(PORTA&0xc0)|(1<<1);
		PORTC=(PORTC&0xf0)|sec2;
		_delay_ms(2);
		PORTA=(PORTA&0xc0)|(1<<2);
		PORTC=(PORTC&0xf0)|min1;
		_delay_ms(2);
		PORTA=(PORTA&0xc0)|(1<<3);
		PORTC=(PORTC&0xf0)|min2;
		_delay_ms(2);
		PORTA=(PORTA&0xc0)|(1<<4);
		PORTC=(PORTC&0xf0)|hour1;
		_delay_ms(2);
		PORTA=(PORTA&0xc0)|(1<<5);
		PORTC=(PORTC&0xf0)|hour2;
		_delay_ms(2);
	}
}
